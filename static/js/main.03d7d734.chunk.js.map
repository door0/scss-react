{"version":3,"sources":["components/Button.js","components/CheckBox.js","App.js","reportWebVitals.js","index.js","components/CheckBox.module.css"],"names":["Button","children","size","color","outline","fullWidth","rest","className","defaultProps","cx","classNames","bind","styles","CheckBox","checked","type","App","useState","check","setCheck","onClick","console","log","onMouseMove","onChange","e","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"sRAMA,SAASA,EAAT,GAAyE,IAAvDC,EAAsD,EAAtDA,SAAUC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,UAAcC,EAAQ,iEACpE,OACI,gDAAQC,UAAWA,IAAU,SAAUL,EAAMC,EAAO,CAACC,UAASC,eAAiBC,GAA/E,aAAsFL,KAK9FD,EAAOQ,aAAe,CAClBN,KAAO,SACPC,MAAO,QAGIH,Q,8BCbTS,E,OAAKC,EAAWC,KAAKC,KAiBZC,MAff,YAAmD,IAA/BC,EAA8B,EAA9BA,QAASb,EAAqB,EAArBA,SAAaK,EAAQ,sCAIhD,OACE,sBAAKC,UAAWE,EAAG,YAAnB,UACE,kCACI,mCAAOM,KAAK,WAAWD,QAASA,GAAaR,IAC7C,qBAAKC,UAAWE,EAAG,QAAnB,SAA6BK,EAAU,cAAC,IAAD,CAAYP,UAAWE,EAAG,cAAiB,cAAC,IAAD,SAEtF,+BAAOR,Q,MCmCEe,MA/Cf,WACE,MAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAIA,OACE,sBAAKZ,UAAU,MAAf,UACE,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,CAAQL,KAAK,QAAb,oBACA,cAAC,EAAD,qBACA,cAAC,EAAD,CAAQA,KAAK,QAAb,uBAEF,sBAAKK,UAAU,UAAf,UACE,cAAC,EAAD,CAAQJ,MAAM,OAAOD,KAAK,QAA1B,oBACA,cAAC,EAAD,CAAQC,MAAM,OAAd,oBACA,cAAC,EAAD,CAAQA,MAAM,OAAOD,KAAK,QAA1B,uBAEF,sBAAKK,UAAU,UAAf,UACE,cAAC,EAAD,CAAQJ,MAAM,OAAOD,KAAK,QAA1B,oBACA,cAAC,EAAD,CAAQC,MAAM,OAAd,oBACA,cAAC,EAAD,CAAQA,MAAM,OAAOD,KAAK,QAA1B,uBAEF,sBAAKK,UAAU,UAAf,UACE,cAAC,EAAD,CAAQL,KAAK,QAAQE,SAAO,EAA5B,oBACA,cAAC,EAAD,CAAQD,MAAM,OAAOC,SAAS,EAA9B,oBACA,cAAC,EAAD,CAAQD,MAAM,OAAOD,KAAK,QAAQE,SAAS,EAA3C,uBAEF,sBAAKG,UAAU,UAAf,UACE,cAAC,EAAD,CAAQF,WAAS,EAAjB,oBACA,cAAC,EAAD,CAAQF,MAAM,OAAOE,WAAW,EAAhC,oBACA,cAAC,EAAD,CAAQF,MAAM,OAAOE,WAAW,EAChCe,QAAS,WACPC,QAAQC,IAAI,kBAEdC,YAAa,WACXF,QAAQC,IAAI,qCALd,uBAQF,cAAC,EAAD,CAAUE,SApCG,SAACC,GAChBN,EAASM,EAAEC,OAAOZ,UAmCcA,QAASI,EAAvC,uEACA,8BACE,wCACCA,EAAQ,OAAS,eClCXS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,SAAW,2BAA2B,KAAO,0B","file":"static/js/main.03d7d734.chunk.js","sourcesContent":["import React from 'react';\r\nimport className from 'classnames';\r\nimport './Button.scss';\r\n\r\n// size : large, medium, smallb\r\n// color : blue, gray, pink\r\nfunction Button({ children, size, color, outline, fullWidth, ...rest }) {\r\n    return (\r\n        <button className={className('Button', size, color, {outline, fullWidth})} {...rest}>{children}\r\n        </button>\r\n    );\r\n}\r\n\r\nButton.defaultProps = {\r\n    size : 'medium',\r\n    color: 'blue'\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport { MdCheckBox, MdCheckBoxOutlineBlank } from \"react-icons/md\";\r\nimport styles from './CheckBox.module.css';\r\nimport classNames from 'classnames/bind';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nfunction CheckBox({ checked, children, ...rest }) {\r\n    // 한개 스타일 넣을 때 : {styles.checkbox}\r\n    // 두개이상의 스타일 넣을 때 : {`${styles.checkbox} ${styles.blabla}`} 이게 귀찮으니까 classNames 라이브러리이용\r\n    // classNames 라이브러리이용시 , {cx('checkbox', 'blabla')}  하면됨.\r\n  return (\r\n    <div className={cx('checkbox')}>\r\n      <label>\r\n          <input type=\"checkbox\" checked={checked} {...rest}/>\r\n          <div className={cx('icon')}>{checked ? <MdCheckBox className={cx('checkbox')}/> : <MdCheckBoxOutlineBlank />}</div>\r\n      </label>\r\n      <span>{children}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckBox;","import React, { useState } from 'react';\nimport Button from './components/Button';\nimport CheckBox from './components/CheckBox';\nimport './App.scss';\n\nfunction App() {\n  const [check, setCheck] = useState(false);\n  const onChange = (e) => {\n    setCheck(e.target.checked)\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"buttons\">\n        <Button size=\"large\">BUTTON</Button>\n        <Button>BUTTON</Button>\n        <Button size=\"small\">BUTTON</Button>\n      </div>\n      <div className=\"buttons\">\n        <Button color=\"gray\" size=\"large\">BUTTON</Button>\n        <Button color=\"gray\">BUTTON</Button>\n        <Button color=\"gray\" size=\"small\">BUTTON</Button>\n      </div>\n      <div className=\"buttons\">\n        <Button color=\"pink\" size=\"large\">BUTTON</Button>\n        <Button color=\"pink\">BUTTON</Button>\n        <Button color=\"pink\" size=\"small\">BUTTON</Button>\n      </div>\n      <div className=\"buttons\">\n        <Button size=\"large\" outline>BUTTON</Button>\n        <Button color=\"gray\" outline={true}>BUTTON</Button>\n        <Button color=\"pink\" size=\"small\" outline={true}>BUTTON</Button>\n      </div>\n      <div className=\"buttons\">\n        <Button fullWidth>BUTTON</Button>\n        <Button color=\"gray\" fullWidth={true}>BUTTON</Button>\n        <Button color=\"pink\" fullWidth={true} \n        onClick={() => {\n          console.log('클릭!')\n        }} \n        onMouseMove={() => {\n          console.log('마우스 무브!')\n        }}>BUTTON</Button>\n      </div>\n      <CheckBox onChange={onChange} checked={check}>다음 약관에 모두 동의</CheckBox>\n      <p>\n        <b>check: </b>\n        {check ? 'true' : 'false'}\n      </p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"CheckBox_checkbox__3DRhA\",\"icon\":\"CheckBox_icon__6js4I\"};"],"sourceRoot":""}